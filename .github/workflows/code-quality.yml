name: Code Quality

on:
  pull_request:
    branches: [ master ]
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.pre-commit-config.yaml'
  push:
    branches: [ master ]
    paths:
      - '**.py'
      - 'pyproject.toml'
      - '.pre-commit-config.yaml'

jobs:
  code-quality:
    name: Format & Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pre-commit

    - name: Cache pre-commit environments
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-precommit-

    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files --show-diff-on-failure

    - name: Check code formatting
      run: |
        echo "Checking if code is properly formatted..."
        if ! ruff format --check --diff .; then
          echo "‚ùå Code formatting issues found!"
          echo "Please run 'ruff format .' to fix formatting issues."
          exit 1
        fi
        echo "‚úÖ Code formatting is correct!"

    - name: Run linting checks
      run: |
        echo "Running linting checks..."
        if ! ruff check .; then
          echo "‚ùå Linting issues found!"
          echo "Please run 'ruff check --fix .' to fix auto-fixable issues."
          exit 1
        fi
        echo "‚úÖ No linting issues found!"

    - name: Comment on PR with instructions (if checks fail)
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const issue_number = context.issue.number;

          // Check if we already commented
          const comments = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number,
          });

          const botComment = comments.data.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('Code Quality Check Failed')
          );

          if (!botComment) {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `## ‚ùå Code Quality Check Failed

          Your pull request has code formatting or linting issues that need to be fixed before merging.

          ### üîß How to fix locally:

          **Option 1: Using pre-commit (recommended)**
          \`\`\`bash
          pip install pre-commit
          pre-commit install
          pre-commit run --all-files
          \`\`\`

          **Option 2: Using Ruff directly**
          \`\`\`bash
          pip install ruff
          ruff format .          # Fix formatting
          ruff check --fix .     # Fix linting issues
          \`\`\`

          **Option 3: One-liner install and fix**
          \`\`\`bash
          pip install -e ".[dev]" && pre-commit run --all-files
          \`\`\`

          ### üìù Then commit and push:
          \`\`\`bash
          git add .
          git commit -m "Fix code formatting and linting"
          git push
          \`\`\`

          The checks will automatically re-run when you push the fixes! ‚ú®`
            });
          }
